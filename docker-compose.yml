# This docker-compose file is meant for local development!

# To make login work correctly you need to have an environment file called hasura_keycloak.env
# which needs to contain the environment variable HASURA_GRAPHQL_JWT_SECRET which contains this value:
# {"type": "RS256", "key": "-----BEGIN CERTIFICATE-----\nPUT_YOUR_PUBLIC_KEY_HERE\n-----END CERTIFICATE-----"}
# The public key value is found in your keycloak instance, edu hub realm, keys, rs256 public key.
# So make the file hasura_keycloak.env next to the docker-compose.yml with this content:

# To get the public key in the first run you might have to provide an empty environment file, then do docker-compose stop and docker-compose up again once you have the public key.

# Then start with docker-compose up -d

# For the frontend you additionally need a frontend.env file that defines STORAGE_BUCKET_URL

# The Hasura console is disabled, you need to start it via CLI instead

version: "3.8"

services:
  frontend:
    ports:
      - "25000:5000"
    build:
      context: ./frontend
      dockerfile: Dockerfile-dev
    command: tail -F anything
    env_file:
      - frontend.env
    volumes:
      - ./frontend:/opt/app
    depends_on:
      - hasura
      - keycloak

  hasura:
    build: ./backend
    ports:
      - "8080:8080"
    depends_on:
      - db_hasura
      - keycloak
    restart: always
    env_file:
      - hasura_keycloak.env
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@db_hasura:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false" # set to "false" to disable console
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
      HASURA_GRAPHQL_EXPERIMENTAL_FEATURES: inherited_roles
      HASURA_BUCKET: "eduhub-staging-new"
      CLOUD_FUNCTION_LINK_LOAD_ACHIEVEMENT_CERTIFICATE: "https://load-achievement-certificate-qvthfbr3za-ew.a.run.app"
      CLOUD_FUNCTION_LINK_LOAD_ACHIEVEMENT_CERTIFICATE_TEMPLATE: "https://load-achievement-certificate-template-qvthfbr3za-ew.a.run.app"
      CLOUD_FUNCTION_LINK_LOAD_PARTICIPATION_CERTIFICATE: "https://load-participation-certificate-qvthfbr3za-ew.a.run.app"
      CLOUD_FUNCTION_LINK_LOAD_PARTICIPATION_CERTIFICATE_TEMPLATE: "https://load-participation-certificate-template-qvthfbr3za-ew.a.run.app"
      CLOUD_FUNCTION_LINK_LOAD_ACHIEVEMENT_RECORD_DOCUMENTATION: ""
      CLOUD_FUNCTION_LINK_SAVE_COURSE_IMAGE: "https://save-course-image-qvthfbr3za-ew.a.run.app"
      CLOUD_FUNCTION_LINK_SAVE_USER_PROFILE_IMAGE: "https://save-user-profile-image-qvthfbr3za-ew.a.run.app"
      CLOUD_FUNCTION_LINK_SAVE_ACHIEVEMENT_RECORD_COVER_IMAGE: "https://save-achievement-record-cover-image-qvthfbr3za-ew.a.run.app"
      CLOUD_FUNCTION_LINK_SAVE_ACHIEVEMENT_RECORD_DOCUMENTATION: ""
      CLOUD_FUNCTION_LINK_SAVE_ACHIEVEMENT_CERTIFICATE: "https://save-achievement-certificate-qvthfbr3za-ew.a.run.app"
      CLOUD_FUNCTION_LINK_SAVE_ACHIEVEMENT_CERTIFICATE_TEMPLATE: "https://save-achievement-certificate-template-qvthfbr3za-ew.a.run.app"
      CLOUD_FUNCTION_LINK_SAVE_PARTICIPATION_CERTIFICATE: "https://save-participation-certificate-qvthfbr3za-ew.a.run.app"
      CLOUD_FUNCTION_LINK_SAVE_PARTICIPATION_CERTIFICATE_TEMPLATE: "https://save-participation-template-certificate-qvthfbr3za-ew.a.run.app"
      CLOUD_FUNCTION_LINK_UPDATE_FROM_KEYCLOAK: "https://update-from-keycloak-qvthfbr3za-ew.a.run.app"
      CLOUD_FUNCTION_LINK_SEND_MAIL: "https://send-mail-qvthfbr3za-ew.a.run.app" 
    volumes:
      - ./backend/migrations:/hasura-migrations
      - ./backend/metadata:/hasura-metadata
      - ./backend/seeds:/hasura-seeds

  db_hasura:
    image: postgres:12
    volumes:
      - db_hasura_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgrespassword

  keycloak:
    build: 
      context: ./keycloak/
      dockerfile: Dockerfile-dev
    ports:
      - 28080:8080
    #depends_on:
    #  - db_keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      #KC_DB: postgres
      #KC_DB_VENDOR: postgres
      #KC_DB_URL: 
      #KC_DB_USERNAME: keycloak
      #KC_DB_PASSWORD: 
      #KC_HOSTNAME: localhost
      KC_HOSTNAME_STRICT: "false"
      #KC_HTTP_ENABLED: "true"
      #KEYCLOAK_IMPORT: /imports/edu-hub-realm.json
    volumes:
      - ./keycloak/imports:/imports
      - ./keycloak/themes/opencampus:/opt/keycloak/themes/opencampus
      - ./keycloak/disable-theme-cache.cli:/opt/keycloak/startup-scripts/disable-theme-cache.cli

  # keycloak comes with h2 embedded, that is enough for development
  # db_keycloak:
  #   image: postgres:12
  #   volumes:
  #     - db_keycloak_data:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_DB: keycloak
  #     POSTGRES_USER: keycloak
  #     POSTGRES_PASSWORD: password

volumes:
  db_hasura_data:
  # db_keycloak_data:
