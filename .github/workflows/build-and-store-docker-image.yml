name: Build and Store a Docker Image in the Artifact Registry

on:
  workflow_call:
    inputs:
      # Name for the docker image
      IMAGE_NAME:
        required: true
        type: string
      # Name of the branch that triggered the workflow run
      BRANCH:
        required: true
        type: string
      # ID of the project in Google in which the image will be stored and deployed
      PROJECT_ID:
        required: true
        type: string
      # Folder with the Dockerfile that is used for creating the image
      DOCKERFILE_FOLDER:
        required: true
        type: string
      # Name of the Dockerfile that is used for creating the image
      DOCKERFILE_NAME:
        required: true
        type: string
      NEXT_PUBLIC_API_URL:
        required: false
        type: string
      NEXT_PUBLIC_AUTH_URL:
        required: false
        type: string
      # SHA of the folder for the given application
      SHA:
        required: true
        type: string
    secrets:
      GCP_REGION:
        required: true
      GCP_SERVICE_ACCOUNT_KEY:
        required: true

jobs:
  build-and-store:
    name: Build and Store Docker Image in the Artifact Registry
    runs-on: ubuntu-latest
    env:
      NEXT_PUBLIC_API_URL: ${{ inputs.NEXT_PUBLIC_API_URL }}
      NEXT_PUBLIC_AUTH_URL: ${{ inputs.NEXT_PUBLIC_AUTH_URL }}

    steps:
      - name: Check Out the Repository Branch
        uses: actions/checkout@v4
      - name: Authenticate to Google Cloud
        id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          project_id: ${{ inputs.PROJECT_ID }}
      - name: Build Docker image
        id: build_image
        run: docker build ./${{ inputs.DOCKERFILE_FOLDER }} --file ./${{ inputs.DOCKERFILE_FOLDER }}/${{ inputs.DOCKERFILE_NAME }} --tag ${{ inputs.IMAGE_NAME }} --label "runnumber=${GITHUB_RUN_ID}" --build-arg NEXT_PUBLIC_API_URL=${{ inputs.NEXT_PUBLIC_API_URL }} --build-arg NEXT_PUBLIC_AUTH_URL=${{ inputs.NEXT_PUBLIC_AUTH_URL }}
      - name: Authenticate with Google Cloud Artifact Registry
        id: auth_gcloud
        run: gcloud auth configure-docker ${{ secrets.GCP_REGION }}-docker.pkg.dev --quiet
      - name: Push Docker Image to Google Artifact Registry
        id: push_image_to_registry
        run: |
          IMAGE_ID=${{ secrets.GCP_REGION }}-docker.pkg.dev/${{ inputs.PROJECT_ID }}/docker-repo/${{ inputs.IMAGE_NAME }}
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          echo IMAGE_ID=$IMAGE_ID
          docker tag ${{ inputs.IMAGE_NAME }} $IMAGE_ID:latest
          docker tag ${{ inputs.IMAGE_NAME }} $IMAGE_ID:${{ inputs.SHA }}
          docker push $IMAGE_ID:latest
          docker push $IMAGE_ID:${{ inputs.SHA }}
      - name: Show Output
        run: echo ${{ steps.push_image_to_registry.outputs.url }}
